{ parameter
    (or (or (or (pair %addLiquidity
                   (address %owner)
                   (nat %minLqtMinted)
                   (nat %maxCashDeposited)
                   (timestamp %deadline))
                (pair %cashToTez
                   (address %to)
                   (nat %cashSold)
                   (nat %minTezBought)
                   (timestamp %deadline)
                   (int %rounds)))
            (or (nat %ctezTarget) (contract %getMarginalPrice (pair nat nat))))
        (or (or (pair %removeLiquidity
                   (address %to)
                   (nat %lqtBurned)
                   (nat %minTezWithdrawn)
                   (nat %minCashWithdrawn)
                   (timestamp %deadline))
                (address %setLqtAddress))
            (or (pair %tezToCash
                   (address %to)
                   (nat %minCashBought)
                   (timestamp %deadline)
                   (int %rounds))
                (pair %tezToToken
                   (address %outputCfmmContract)
                   (nat %minTokensBought)
                   (address %to)
                   (timestamp %deadline)
                   (int %rounds))))) ;
  storage
    (pair (nat %cashPool)
          (nat %tezPool)
          (nat %lqtTotal)
          (nat %target)
          (address %ctez_address)
          (address %cashAddress)
          (address %lqtAddress)
          (timestamp %lastOracleUpdate)
          (address %consumerEntrypoint)) ;
  code { LAMBDA
           (pair nat nat)
           (pair nat nat)
           { UNPAIR ;
             DUP 2 ;
             DUP 2 ;
             ADD ;
             DUG 2 ;
             SUB ;
             DUP 2 ;
             DUP 3 ;
             MUL ;
             DUP ;
             DUP 2 ;
             MUL ;
             DUP ;
             DUP 2 ;
             MUL ;
             DIG 4 ;
             DIG 3 ;
             DIG 3 ;
             MUL ;
             MUL ;
             DUP 3 ;
             DUP 4 ;
             MUL ;
             DUP ;
             DUP 2 ;
             MUL ;
             DUP ;
             DUP 2 ;
             MUL ;
             DIG 5 ;
             DIG 3 ;
             DIG 3 ;
             MUL ;
             MUL ;
             DIG 2 ;
             ADD ;
             ABS ;
             PUSH nat 8 ;
             MUL ;
             SWAP ;
             DIG 2 ;
             SUB ;
             ABS ;
             PAIR } ;
         LAMBDA
           (pair (lambda (pair nat nat) (pair nat nat)) (pair (pair nat nat) nat int))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP ;
             DUP 4 ;
             ADD ;
             DUP ;
             MUL ;
             DROP ;
             DUP 4 ;
             DUP 4 ;
             PAIR ;
             DUP 6 ;
             SWAP ;
             EXEC ;
             CAR ;
             DIG 4 ;
             DIG 4 ;
             PAIR ;
             SWAP ;
             DIG 3 ;
             PAIR ;
             PUSH nat 0 ;
             DIG 3 ;
             PAIR ;
             PAIR ;
             PAIR ;
             LEFT nat ;
             LOOP_LEFT
               { PUSH int 0 ;
                 DUP 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { CAR ; CAR ; CDR ; RIGHT (pair (pair (pair nat nat) int nat) nat nat) }
                    { DUP ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DUP 2 ;
                      CDR ;
                      CDR ;
                      SUB ;
                      ABS ;
                      DUP 2 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      DUP 3 ;
                      CDR ;
                      CAR ;
                      ADD ;
                      PAIR ;
                      DUP 3 ;
                      SWAP ;
                      EXEC ;
                      UNPAIR ;
                      SWAP ;
                      DUP 3 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      SUB ;
                      EDIV ;
                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                      CAR ;
                      ABS ;
                      DUP 2 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      ADD ;
                      DUP 2 ;
                      DUP 3 ;
                      CAR ;
                      DUP ;
                      CAR ;
                      DIG 3 ;
                      UPDATE 2 ;
                      UPDATE 1 ;
                      UPDATE 1 ;
                      DUP ;
                      CAR ;
                      DUP ;
                      CDR ;
                      PUSH int 1 ;
                      DIG 4 ;
                      CAR ;
                      CDR ;
                      CAR ;
                      SUB ;
                      UPDATE 1 ;
                      UPDATE 2 ;
                      UPDATE 1 ;
                      LEFT nat } } ;
             SWAP ;
             DROP } ;
         DUP 2 ;
         APPLY ;
         SWAP ;
         DROP ;
         LAMBDA
           (pair (lambda (pair (pair nat nat) nat int) nat) (pair nat nat nat nat int))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR 5 ;
             PUSH nat 48 ;
             SWAP ;
             LSL ;
             DUP 2 ;
             DUP 5 ;
             MUL ;
             PUSH nat 48 ;
             DIG 4 ;
             LSL ;
             DIG 5 ;
             SWAP ;
             PAIR ;
             SWAP ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             PUSH int 0 ;
             DUP 2 ;
             DIG 3 ;
             SUB ;
             COMPARE ;
             LE ;
             IF { DROP ; PUSH nat 16 ; FAILWITH } {} } ;
         DUP 2 ;
         APPLY ;
         LAMBDA
           (pair nat nat nat)
           (pair nat nat)
           { UNPAIR 3 ;
             DUP 3 ;
             DIG 2 ;
             MUL ;
             PUSH nat 48 ;
             DIG 2 ;
             LSL ;
             DUP ;
             DUP 3 ;
             ADD ;
             SWAP ;
             DIG 2 ;
             SUB ;
             DUP 2 ;
             DUP 3 ;
             MUL ;
             DUP ;
             DUP 2 ;
             MUL ;
             DIG 3 ;
             DUG 2 ;
             MUL ;
             MUL ;
             DUP 2 ;
             DUP 3 ;
             MUL ;
             DUP ;
             DUP 2 ;
             MUL ;
             DIG 3 ;
             DUG 2 ;
             MUL ;
             MUL ;
             DUP ;
             DUP 3 ;
             ADD ;
             ABS ;
             SWAP ;
             DIG 2 ;
             SUB ;
             ABS ;
             DUG 2 ;
             MUL ;
             PUSH nat 48 ;
             DIG 2 ;
             LSL ;
             PAIR } ;
         LAMBDA
           (pair (lambda (pair nat nat nat) (pair nat nat))
                 (pair (list operation) nat nat nat nat address address address timestamp address))
           (pair (list operation) nat nat nat nat address address address timestamp address)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             NOW ;
             DUP 3 ;
             GET 15 ;
             COMPARE ;
             EQ ;
             IF { DIG 2 ; DROP }
                { DUP 2 ;
                  GET 16 ;
                  CONTRACT (pair nat nat) ;
                  IF_NONE { PUSH nat 35 ; FAILWITH } {} ;
                  DUP 3 ;
                  NOW ;
                  UPDATE 15 ;
                  DUG 2 ;
                  PUSH mutez 0 ;
                  DUP 5 ;
                  GET 7 ;
                  DUP 6 ;
                  CAR ;
                  DIG 6 ;
                  GET 3 ;
                  PAIR 3 ;
                  DIG 5 ;
                  SWAP ;
                  EXEC ;
                  TRANSFER_TOKENS ;
                  CONS } ;
             PAIR } ;
         DUP 2 ;
         APPLY ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { DIG 4 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     UNPAIR 4 ;
                     AMOUNT ;
                     PUSH mutez 1 ;
                     SWAP ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 4 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { DROP 5 ; PUSH nat 3 ; FAILWITH }
                        { DUP 5 ;
                          GET 3 ;
                          DUP ;
                          DUP 7 ;
                          GET 5 ;
                          DUP 4 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          SWAP ;
                          DUP 7 ;
                          CAR ;
                          DUP 4 ;
                          MUL ;
                          SWAP ;
                          INT ;
                          SWAP ;
                          NEG ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          ABS ;
                          DIG 5 ;
                          DUP 2 ;
                          COMPARE ;
                          GT ;
                          IF { DROP 6 ; PUSH nat 6 ; FAILWITH }
                             { DIG 4 ;
                               DUP 3 ;
                               COMPARE ;
                               LT ;
                               IF { DROP 5 ; PUSH nat 5 ; FAILWITH }
                                  { DUP 5 ;
                                    DUP 3 ;
                                    DUP 7 ;
                                    GET 5 ;
                                    ADD ;
                                    UPDATE 5 ;
                                    DUP 2 ;
                                    DUP 7 ;
                                    CAR ;
                                    ADD ;
                                    UPDATE 1 ;
                                    DIG 3 ;
                                    DIG 5 ;
                                    GET 3 ;
                                    ADD ;
                                    UPDATE 3 ;
                                    SWAP ;
                                    SELF_ADDRESS ;
                                    SENDER ;
                                    DUP 4 ;
                                    GET 11 ;
                                    CONTRACT %transfer (pair address address nat) ;
                                    IF_NONE { PUSH nat 26 ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    DIG 4 ;
                                    DIG 4 ;
                                    PAIR ;
                                    DIG 3 ;
                                    PAIR ;
                                    TRANSFER_TOKENS ;
                                    DIG 2 ;
                                    INT ;
                                    DIG 3 ;
                                    DUP 4 ;
                                    GET 13 ;
                                    CONTRACT %mintOrBurn (pair (int %quantity) (address %target)) ;
                                    IF_NONE { PUSH nat 12 ; FAILWITH } {} ;
                                    PUSH mutez 0 ;
                                    DIG 2 ;
                                    DIG 3 ;
                                    PAIR ;
                                    TRANSFER_TOKENS ;
                                    DIG 2 ;
                                    NIL operation ;
                                    DIG 2 ;
                                    CONS ;
                                    DIG 2 ;
                                    CONS ;
                                    PAIR } } } }
                   { UNPAIR 5 ;
                     DIG 3 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DIG 6 ; DROP 6 ; PUSH nat 3 ; FAILWITH }
                        { PUSH mutez 0 ;
                          AMOUNT ;
                          COMPARE ;
                          GT ;
                          IF { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DIG 6 ; DROP 6 ; PUSH nat 10 ; FAILWITH }
                             { DUP 5 ;
                               GET 7 ;
                               DUP 6 ;
                               GET 3 ;
                               DUP 7 ;
                               CAR ;
                               DUP 3 ;
                               MUL ;
                               PUSH nat 48 ;
                               DUP 3 ;
                               LSL ;
                               DUP 6 ;
                               DIG 4 ;
                               MUL ;
                               DIG 7 ;
                               SWAP ;
                               PAIR ;
                               SWAP ;
                               DIG 2 ;
                               PAIR ;
                               PAIR ;
                               DIG 7 ;
                               SWAP ;
                               EXEC ;
                               PUSH nat 48 ;
                               SWAP ;
                               LSR ;
                               PUSH int 0 ;
                               DUP 2 ;
                               DIG 3 ;
                               SUB ;
                               COMPARE ;
                               LE ;
                               IF { DROP ; PUSH nat 27 ; FAILWITH } {} ;
                               PUSH nat 10000 ;
                               PUSH nat 9995 ;
                               DIG 2 ;
                               MUL ;
                               EDIV ;
                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                               CAR ;
                               DIG 3 ;
                               DUP 2 ;
                               COMPARE ;
                               LT ;
                               IF { DROP ; PUSH nat 37 ; FAILWITH } {} ;
                               DUP 3 ;
                               SELF_ADDRESS ;
                               SENDER ;
                               DUP 7 ;
                               GET 11 ;
                               CONTRACT %transfer (pair address address nat) ;
                               IF_NONE { PUSH nat 26 ; FAILWITH } {} ;
                               PUSH mutez 0 ;
                               DIG 4 ;
                               DIG 4 ;
                               PAIR ;
                               DIG 3 ;
                               PAIR ;
                               TRANSFER_TOKENS ;
                               DIG 2 ;
                               CONTRACT unit ;
                               IF_NONE { PUSH nat 9 ; FAILWITH } {} ;
                               PUSH mutez 1 ;
                               DUP 4 ;
                               MUL ;
                               UNIT ;
                               TRANSFER_TOKENS ;
                               DIG 2 ;
                               DUP 5 ;
                               GET 3 ;
                               SUB ;
                               ISNAT ;
                               IF_NONE { PUSH nat 1001 ; FAILWITH } {} ;
                               DUP 5 ;
                               DIG 4 ;
                               DIG 5 ;
                               CAR ;
                               ADD ;
                               UPDATE 1 ;
                               SWAP ;
                               UPDATE 3 ;
                               NIL operation ;
                               DIG 2 ;
                               CONS ;
                               DIG 2 ;
                               CONS ;
                               PAIR } } ;
                     EXEC } }
               { DIG 2 ;
                 DIG 4 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DUP 2 ;
                     GET 9 ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { DROP 2 ; PUSH nat 1000 ; FAILWITH }
                        { UPDATE 7 ; NIL operation ; PAIR } }
                   { DUP 2 ;
                     GET 7 ;
                     DUP 3 ;
                     CAR ;
                     DUP 4 ;
                     GET 3 ;
                     PAIR 3 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { DIG 3 ;
             DIG 5 ;
             DROP 2 ;
             IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 IF_LEFT
                   { UNPAIR 5 ;
                     DIG 4 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { DROP 5 ; PUSH nat 3 ; FAILWITH }
                        { PUSH mutez 0 ;
                          AMOUNT ;
                          COMPARE ;
                          GT ;
                          IF { DROP 5 ; PUSH nat 10 ; FAILWITH }
                             { DUP 5 ;
                               GET 5 ;
                               DUP 6 ;
                               GET 3 ;
                               DUP 4 ;
                               MUL ;
                               EDIV ;
                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                               CAR ;
                               DUP 6 ;
                               GET 5 ;
                               DUP 7 ;
                               CAR ;
                               DUP 5 ;
                               MUL ;
                               EDIV ;
                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                               CAR ;
                               DIG 4 ;
                               DUP 3 ;
                               COMPARE ;
                               LT ;
                               IF { DROP 6 ; PUSH nat 36 ; FAILWITH }
                                  { DIG 4 ;
                                    DUP 2 ;
                                    COMPARE ;
                                    LT ;
                                    IF { DROP 5 ; PUSH nat 11 ; FAILWITH }
                                       { DUP 4 ;
                                         DUP 6 ;
                                         GET 5 ;
                                         SUB ;
                                         ISNAT ;
                                         IF_NONE { PUSH nat 14 ; FAILWITH } {} ;
                                         DUP 2 ;
                                         DUP 7 ;
                                         CAR ;
                                         SUB ;
                                         ISNAT ;
                                         IF_NONE { PUSH nat 16 ; FAILWITH } {} ;
                                         DUP 4 ;
                                         DUP 8 ;
                                         GET 3 ;
                                         SUB ;
                                         ISNAT ;
                                         IF_NONE { PUSH nat 27 ; FAILWITH } {} ;
                                         DIG 6 ;
                                         PUSH int 0 ;
                                         SUB ;
                                         SENDER ;
                                         DUP 9 ;
                                         GET 13 ;
                                         CONTRACT %mintOrBurn (pair (int %quantity) (address %target)) ;
                                         IF_NONE { PUSH nat 12 ; FAILWITH } {} ;
                                         PUSH mutez 0 ;
                                         DIG 2 ;
                                         DIG 3 ;
                                         PAIR ;
                                         TRANSFER_TOKENS ;
                                         DIG 4 ;
                                         SENDER ;
                                         SELF_ADDRESS ;
                                         DUP 10 ;
                                         GET 11 ;
                                         CONTRACT %transfer (pair address address nat) ;
                                         IF_NONE { PUSH nat 26 ; FAILWITH } {} ;
                                         PUSH mutez 0 ;
                                         DIG 4 ;
                                         DIG 4 ;
                                         PAIR ;
                                         DIG 3 ;
                                         PAIR ;
                                         TRANSFER_TOKENS ;
                                         DIG 6 ;
                                         CONTRACT unit ;
                                         IF_NONE { PUSH nat 9 ; FAILWITH } {} ;
                                         PUSH mutez 1 ;
                                         DIG 7 ;
                                         MUL ;
                                         UNIT ;
                                         TRANSFER_TOKENS ;
                                         DIG 6 ;
                                         DIG 4 ;
                                         UPDATE 3 ;
                                         DIG 5 ;
                                         UPDATE 5 ;
                                         DIG 4 ;
                                         UPDATE 1 ;
                                         NIL operation ;
                                         DIG 2 ;
                                         CONS ;
                                         DIG 2 ;
                                         CONS ;
                                         DIG 2 ;
                                         CONS ;
                                         PAIR } } } } }
                   { PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     GT ;
                     IF { DROP 2 ; PUSH nat 10 ; FAILWITH }
                        { PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                          DUP 3 ;
                          GET 13 ;
                          COMPARE ;
                          NEQ ;
                          IF { DROP 2 ; PUSH nat 24 ; FAILWITH }
                             { UPDATE 13 ; NIL operation ; PAIR } } } }
               { IF_LEFT
                   { UNPAIR 4 ;
                     AMOUNT ;
                     PUSH mutez 1 ;
                     SWAP ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 3 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DIG 6 ; DROP 6 ; PUSH nat 3 ; FAILWITH }
                        { DIG 3 ;
                          DUP 5 ;
                          GET 7 ;
                          DUP 3 ;
                          DUP 7 ;
                          CAR ;
                          DUP 8 ;
                          GET 3 ;
                          PAIR 5 ;
                          DIG 6 ;
                          SWAP ;
                          EXEC ;
                          PUSH nat 10000 ;
                          PUSH nat 9995 ;
                          DIG 2 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DIG 3 ;
                          DUP 2 ;
                          COMPARE ;
                          LT ;
                          IF { DROP ; PUSH nat 8 ; FAILWITH } {} ;
                          DUP ;
                          DUP 5 ;
                          CAR ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH nat 17 ; FAILWITH } {} ;
                          DUP 5 ;
                          DIG 3 ;
                          DIG 5 ;
                          GET 3 ;
                          ADD ;
                          UPDATE 3 ;
                          SWAP ;
                          UPDATE 1 ;
                          SWAP ;
                          DIG 2 ;
                          SELF_ADDRESS ;
                          DUP 4 ;
                          GET 11 ;
                          CONTRACT %transfer (pair address address nat) ;
                          IF_NONE { PUSH nat 26 ; FAILWITH } {} ;
                          PUSH mutez 0 ;
                          DIG 4 ;
                          DIG 4 ;
                          PAIR ;
                          DIG 3 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          SWAP ;
                          NIL operation ;
                          DIG 2 ;
                          CONS ;
                          PAIR } ;
                     EXEC }
                   { UNPAIR 5 ;
                     DUP ;
                     CONTRACT %cashToToken
                       (pair (address %to) (nat %minTokensBought) (nat %cashSold) (timestamp %deadline)) ;
                     IF_NONE { PUSH nat 31 ; FAILWITH } {} ;
                     DUP 5 ;
                     NOW ;
                     COMPARE ;
                     GE ;
                     IF { SWAP ;
                          DIG 2 ;
                          DIG 3 ;
                          DIG 4 ;
                          DIG 5 ;
                          DIG 6 ;
                          DIG 8 ;
                          DROP 8 ;
                          PUSH nat 3 ;
                          FAILWITH }
                        { AMOUNT ;
                          PUSH mutez 1 ;
                          SWAP ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DIG 6 ;
                          DUP 8 ;
                          GET 7 ;
                          DUP 3 ;
                          DUP 10 ;
                          CAR ;
                          DUP 11 ;
                          GET 3 ;
                          PAIR 5 ;
                          DIG 9 ;
                          SWAP ;
                          EXEC ;
                          PUSH nat 10000 ;
                          PUSH nat 9995 ;
                          DIG 2 ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          DUP ;
                          DUP 9 ;
                          CAR ;
                          SUB ;
                          ISNAT ;
                          IF_NONE { PUSH nat 17 ; FAILWITH } {} ;
                          DUP 9 ;
                          DIG 3 ;
                          DIG 9 ;
                          GET 3 ;
                          ADD ;
                          UPDATE 3 ;
                          SWAP ;
                          UPDATE 1 ;
                          DUP ;
                          GET 11 ;
                          CONTRACT %approve (pair address nat) ;
                          IF_NONE { PUSH nat 34 ; FAILWITH } {} ;
                          DUP ;
                          PUSH mutez 0 ;
                          DUP 5 ;
                          DUP 8 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          SWAP ;
                          PUSH mutez 0 ;
                          PUSH nat 0 ;
                          DIG 7 ;
                          PAIR ;
                          TRANSFER_TOKENS ;
                          PAIR ;
                          DIG 3 ;
                          PUSH mutez 0 ;
                          DIG 7 ;
                          DIG 5 ;
                          DIG 6 ;
                          DIG 7 ;
                          PAIR 4 ;
                          TRANSFER_TOKENS ;
                          DIG 2 ;
                          NIL operation ;
                          DIG 2 ;
                          CONS ;
                          DUP 3 ;
                          CDR ;
                          CONS ;
                          DIG 2 ;
                          CAR ;
                          CONS ;
                          PAIR } ;
                     EXEC } } } } }

